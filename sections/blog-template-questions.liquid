{% if template contains 'questions' %}
  {% include 'faq.intro' %}
{% endif %}


{% comment %}
{% include 'blog-filters' %}

{% include 'blog-filters-mob' %}
{% endcomment %}

{% if current_tags == blank %}
{% comment %}
<div class="blogs">
  <div class="blogs_main">
    <div class="blogs_main_left">
      {% include 'breadcrumb' %}
    
      <h1>{{ section.settings.Blog_heading }}</h1>
      <h5 class="para_uk">{{ section.settings.Blog_para }}</h5>
      <h5 class="para_non_uk">{{ section.settings.Blog_para_non_uk }}</h5>
      
      <div class="blog_mail_box">
        <h6>{{ section.settings.Blog_Offer }}</h6>

        <div class="blog_email">
         {% comment %} {% include 'email-signup' %} {% endcomment %}
         {% comment %} <div class="klaviyo-form-MFbG3B"></div>{% endcomment %}
          {% include 'klaviyo-footer-selector', blog: true %}
        </div>
        {% comment %}
        <div class="checkbox_acc checkbox_acc2">
          <p><input type="checkbox"> <span>{{ section.settings.Blog_subscription }}</span></p>
        </div>
        {% endcomment %}
      </div>
    </div>
    <div class="blogs_main_right" {% if section.settings.Blog_right_image != blank %} style="background-image:url('{{ section.settings.Blog_right_image | img_url : 'master'}}');"{% endif %}>
   {% comment %}   <img data-src="{{ section.settings.Blog_right_image | img_url : 'master' }}" class="lazyload"> {% endcomment %}
    </div>
  </div>
</div>
{% endcomment %}
{% comment %}
<div class="inline-articles">
  <div class="grid">
  	{% for article in blogs["insight"].articles limit:5 %}
    <div class="grid__item one-fifth">
  		<p class="inline">{{ article.title }}</p>
    </div>
  	{% endfor %}
  </div>
</div>
{% endcomment %}
{% else %}
{% comment %}
<h1 class="wrapper h1 articles-author text-left">
   	{% if section.settings.authors_title != blank %}
  	{{ section.settings.authors_title }}
  	{% else %}
	{% for tag in current_tags %}
	{% if tag contains "author" %}
	Articles By	{{ tag | replace: "author_", "" | uppercase }} 	
	{% break %}
	{% endif %}
	{% endfor %}
  	{% endif %}
</h1>
{% endcomment %}

<h1 class="wrapper h1 articles-author text-left">
	{% for tag in current_tags %}
	{% if tag contains "custom_" %}
	Tagged	{{ tag | replace: "custom_", "" | uppercase }}
	{% break %}
	{% endif %}
	{% endfor %}
</h1>
{% for block in section.blocks %}
{% for tag in current_tags %}
{% if tag contains block.settings.authors_name %}
<div class="author-description wrapper">
  <img data-src="{{ block.settings.author_image | img_url: 'x200' }}"/ class="authors-image lazyload">
  <p class="authors-name">{{ block.settings.authors_name | uppercase }}</p>
  <div class="authors-description">
  	{{ block.settings.author_description }}
  </div>
</div>
{% endif %}
{% break %}
{% endfor %}
{% endfor %}
<div class="blogs1">
  <div class="blogs_main1">
    {% comment %}
    Gets the top article and put it in the beggining of blog.articles 
    {% endcomment %}
    
 	 {% for article in blog.articles %}
    {% assign current_tag = current_tags %}
     {% assign featured = 'featured' %}
    {% capture new_var1 %}{{ current_tags }}-{{ featured }}{% endcapture %}
   
  	{% if article.tags contains new_var1 %}
  	
        <div class="grid__item article_full_width">
           <a href="{{ article.url }}" title="{{ article.title | escape }}"> 
            <div class="leftSide">
              <div style="overflow:hidden;">
                {% if article.image %}
              		{% include "filter-rias-img-url-with-height" input: article.image %}
		            {% assign image_url = output %}
               		<img
                    data-src="{{ image_url }}"
                    data-ratio="{{ article.image.aspect_ratio }}"
                    data-sizes="auto"
                    data-parent-fit="cover"
                    class="lazyload lazyload-fade"
                    alt="{{ article.image.alt | escape }}">   
                {% else %}
                  {% if article.content contains "<img " %}
                      {% assign src = article.content | split: 'src="' %}
                      {% assign src = src[1] | split: '"' | first | replace: '//cdn', 'http://cdn' | replace: 'http:http://', 'http://' | remove: 'https:' %}
                      <img data-src="{{ src }}" alt="{{ article.title | escape }}" class="lazyload" />
                  {% endif %}    
                {% endif %}
              </div>
            </div>
         </a>
          <div class="rightSide">
            <div class="rightSide_full">
            <div class="blog_details">
              <a href="{{ article.url }}" title="{{ article.title | escape }}"> 
                <h4 class='featured-blog__title'>{{ article.title }}</h4>
              </a>

              {% if section.settings.enable_blog_author %}
                <p class="author">{{ 'blogs.article.author_by_html' | t: author : article.author }}</p>
              {% endif %}
			<div class="tags_blog">
                  
                <ul class="inline-list">
                  
                  {% assign current_tag = current_tags %}
                 
                  {% for i in (1..10) %}

                    {% capture blog_filter %}Blog_filter_text_{{ i }}{% endcapture %}  
                    {% capture blog_filter_img %}Blog_filter_img_{{ i }}{% endcapture %}
                    {% assign filter_tag = settings[blog_filter] | capitalize %}
				   {{ filter_tag }}
         			{% if current_tags contains filter_tag %}
                  		{% if settings[blog_filter] != blank %}
                        <li>
                          <img data-src="{{ settings[blog_filter_img] | img_url: '600x' }}" class="lazyload" />
                          <span>{{ settings[blog_filter] }}</span>
                        </li>
                 		{% endif %}
                      {% endif %}         
                    
                  {% endfor %}
                 
                </ul>
              </div>
              
              <span class="excerpt excerpts">
                {% if article.excerpt_or_content != '' %}
                  {% capture art_url %} <a href="{{ article.url }}">...</a>{% endcapture %}
                  {{ article.excerpt_or_content | truncate: 180, art_url }} 
                {% endif %}
              </span>
              <span class="read_more">{{ 'blogs.article.read_more' | t }}</span>
              <a href="{{ article.url }}" title="{{ article.title | escape }}" class="readMoreBtn" >{{ 'blogs.article.read_more' | t }}</a>
            </div>
            </div>
          </div>
          <!--</a>-->
        </div>
    	{% break %}
	  {% endif %}
      {% endfor %}
    
    
    
  </div>
</div>

  {% endif %}


 {% assign article_custom_positions = '' | split: "," %}
 {% for article in blog.articles %}
    {% for tag in article.tags %}
       {% if tag contains 'article_position' %}
           {% assign temp_custom_position = tag | split: '_' | last | split: "," %}
           {% assign article_custom_positions = article_custom_positions | concat: temp_custom_position  %}
	   {% endif %}
    {% endfor %}
 {% endfor %}


 {% for article in blog.articles %}
    {% assign current_tag = current_tags %}
     {% assign featured = 'featured' %}
    {% capture new_var1 %}{{ current_tags }}-{{ featured }}{% endcapture %}
   
  	{% if article.tags contains new_var1 %}
	
	{%assign indexnum =  forloop.index  %}
		
  	{% break %}
	{% endif %}
  {% endfor %}


<!-- /templates/blog.liquid -->
{% assign article_wrapper_id = '' %}
{% if template contains 'questions' %}
  {% assign number = 12 %}
  {% assign article_wrapper_class = 'questions_wrapper' %}
{% else %}
  {% assign article_wrapper_class = 'masonry-grid-cb article_wrapper masonry-row' %}
  {% assign article_wrapper_id = 'masonry-grid-cb' %}
  {% assign number = 13 %}

  {% comment %}
  <!--
   uncomment this part if not default pager is used:
   We jave to skip the articles of type Questions and Listen. Then replace the skipped articles with next articles. So we increase the per page 'number'.
   This works on "show more" or lazy load; by normal pager the change in the per page number will make a new offset (of the articles) to begin at the current page.
  -->
  {% for article in blog.articles limit: number %}
    {% for tag in article.tags %}
      {% if tag contains "Questions" or tag contains "Listen" %}
        {% assign number = number | plus: 1 %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {% endcomment %}

{% endif %}

{% assign all_articles = blog.articles %}
{% assign actualindex_allpages = 0 %}

{% comment %}nesting here the section "blog-template-featured-articles-marquee.liquid"{% endcomment %}



{% paginate blog.articles by number %}
   {% comment %}{% assign actualindex_allpages = paginate.current_page | minus: 1 | times: number %}{% endcomment %}
{% comment %}
  This template is also used for listing out articles of a specific tag.
  You can change layouts or styles by checking if current_tags is true.
  This pagination do not includes the default blog articles - they are looped with a for and a 'manual' pagination after this.
{% endcomment %}
<div class="{% if template contains 'questions' %}question-section{% else %}ambassadors_bottom margin-top-0{% endif %}">
  <div class="wrapper">
    <div id="{{article_wrapper_id}}" class="grid ambassadors_bottom-blog {{article_wrapper_class}}">
    {% comment %}
      {% if paginate.pages > 1 %}
        <hr>
        <div class="pagination blog-pagination">
          {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
        </div>
      {% endif %}
    {% endcomment %}
  

      {% for article in blog.articles %}
  {% comment %}
              <div class="question grid__item small--one-whole medium--one-half large--one-quarter article ArticleItem">
               {{ article.title }}
 			 </div>
  {% endcomment %}
    	{% if template contains 'questions' %}
    	   {% if indexnum != forloop.index %}
  
            <div class="question question-item grid__item small--one-whole medium--one-half one-third article ArticleItem">
                {% comment %}masonry class: masonry-grid-cb-item masonry-grid-cb-item-4{% endcomment %}
                <a class="blog_details" href="{{ article.url }}">
                  <h4 class='featured-blog__title'>{{ article.title }}</h4>
                  {% if section.settings.enable_blog_author %}
                    <p class="author">{{ 'blogs.article.author_by_html' | t: author : article.author }}</p>
                  {% endif %}
                  <span class="excerpt" data-href="{{ article.url }}">
                     {% comment %}{% capture art_url %} <a href="{{ article.url }}">...</a>{% endcapture %}{% endcomment %}
                     {{ article.excerpt_or_content | strip_html | truncate: 180 }} 	                     
                  </span>
                 
                  <span class="read_more">{{ 'blogs.article.read_more' | t }}</span>
                  <div class="tags_blog">

                    <ul class="inline-list">

                      {% for i in (1..10) %}

                        {% capture blog_filter %}Blog_filter_text_{{ i }}{% endcapture %}  
                        {% capture blog_filter_img %}Blog_filter_img_{{ i }}{% endcapture %}
                        {% assign filter_tag = settings[blog_filter] %}


                        {% for tag in article.tags %}
                          {% if tag == filter_tag %} 
                            <li>
                              <img data-src="{{ settings[blog_filter_img] | img_url: '600x' }}" class="lazyload" />
                              <span>{{ settings[blog_filter] }}</span>
                            </li>
                          {% endif %}         
                        {% endfor %}
                      {% endfor %}

                    </ul>
                  </div>
                </a>
            </div>
           {% endif %}	
        {% else %}
           {% comment %}Default blog page. For now lists all articles, inlcuding Questions and Playlists{% endcomment %}
           {% comment %} unless article.tags contains 'Questions' or article.tags contains 'Listen' {% endcomment %}
    	     {% if indexnum != forloop.index %}
           
               {% assign article_has_custom_position = false %}
               {% for tag in article.tags %}
                 {% if tag contains 'article_position' and current_tags == blank %}
                    {% assign article_has_custom_position = true %}
	             {% endif %}
               {% endfor %}
               {% if article_has_custom_position %}
                 {% continue %}
               {% endif %}
  
    	       {% include 'blog-article-grid-item' %}
               {% assign current_custom_position = actualindex_allpages | plus: 1 | downcase %}
      	       {% if article_custom_positions contains current_custom_position %}
  				   {% assign current_custom_position = 'article_position_' | append: current_custom_position %}
				   {% for temp_article in all_articles %}
					   {% if temp_article.tags contains current_custom_position %}
						   {% include 'blog-article-grid-item', article: temp_article, forloop_index: forloop.index %}
					   {% endif %}
				   {% endfor %}
               {% endif %}
  
             {% endif %}
           {% comment %} endunless {% endcomment %}
        {% endif %}
{% endfor %}
    
    </div>
  </div>
</div>

{% comment %}<!--start manual pagination of articles-->
{% paginate blog.articles by number %}
  {% assign manual_first_item = paginate.current_page | minus: 1 | times: number | plus: 1 %}
  {% assign manual_last_item = paginate.current_page | minus: 1 | times: number | plus: number %}
{% endpaginate%}
<!--  test:{{manual_first_item}}-{{manual_last_item}}/{{blog.articles | size}}<br>-->
{% assign article_actual_index = 0 %}
<div class="ambassadors_bottom margin-top-0">
<div id="{{article_wrapper_id}}" class="grid--full ambassadors_bottom-blog {{article_wrapper_class}} wrapper">
{% assign temp_pages = blogs['insight'].articles_count | divided_by: 50.0 | ceil %}
{% for temp_page in (0..temp_pages) %}
  {% assign temp_offset = temp_page | times: 50 %}
  {% for article in blogs['insight'].articles limit:60 offset: temp_offset %}
    {% unless article.tags contains 'Questions' or article.tags contains 'Listen' %}
        {% assign article_actual_index = article_actual_index | plus: 1 | plus: temp_offset %}
        {% if article_actual_index < manual_first_item %}
          {% continue %}
        {% endif %}
        {% if article_actual_index > manual_last_item %}
          {% continue %}
        {% endif %}
  
    	 {% if indexnum != forloop.index %}
           
           {% assign article_has_custom_position = false %}
           {% for tag in article.tags %}
              {% if tag contains 'article_position' and current_tags == blank %}
                 {% assign article_has_custom_position = true %}
	          {% endif %}
           {% endfor %}
           {% if article_has_custom_position %}
              {% continue %}
           {% endif %}
  
    	   {% include 'blog-article-grid-item' %}
           {% assign current_custom_position = actualindex_allpages | plus: 1 | downcase %}
      	   {% if article_custom_positions contains current_custom_position %}
  				{% assign current_custom_position = 'article_position_' | append: current_custom_position %}
				{% for temp_article in all_articles %}
					{% if temp_article.tags contains current_custom_position %}
						{% include 'blog-article-grid-item', article: temp_article, forloop_index: forloop.index %}
					{% endif %}
				{% endfor %}
           {% endif %}
  
     {% endif %}
    {% endunless %}
  {% endfor %}
{% endfor %}
</div>
</div>
<!--end manual pagination of articles-->{% endcomment %}


{% if paginate.pages > 1 %}
<div class="pagination">
  {% comment %}
    {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
  {% endcomment %}
  

  {% if paginate.previous.is_link %}
    <span class="prev">
      <a href="{{ paginate.previous.url }}">&larr;</a>
    </span>
  {% endif %}
  
  {% assign page_minus_2 = paginate.current_page | minus: 2 %}
  {% assign paginate_part_prev_is_deco = false %}
  {%- for part in paginate.parts -%}
    {%- if part.is_link -%}
      {% if part.title == page_minus_2 and page_minus_2 != 1 %}
        {% unless paginate_part_prev_is_deco %}
          <span class="deco">&hellip;</span>
          {% assign paginate_part_prev_is_deco = false %}
        {% endunless %}
        {% continue %}
      {% endif %}
  
      <span class="page">
        <a href="{{ part.url }}">{{ part.title }}</a>
  	  </span>
    {%- else -%}
      {%- if part.title == paginate.current_page -%}
        <span class="page current">{{ part.title }}</span>
      {%- else -%}
        <span class="deco">&hellip;</span>
        {% assign paginate_part_prev_is_deco = true %}
      {%- endif -%}
    {%- endif -%}
  {%- endfor -%}
  
  {% if paginate.next.is_link %}
    <span class="next">
      <a href="{{ paginate.next.url }}">&rarr;</a>
    </span>
  {% endif %}
</div>
{% endif %}


{% comment %}
{% if paginate.next.url %}
<div class="showall_but">
  <a href="#"  id="more" data-href="{{ paginate.next.url }}" href="javascript:void(0);">SHOW MORE</a>
</div>
{% endif %}
{% endcomment %}

{% endpaginate %}

           


<div class="blog_playlist">
  <div class="related_blog_slider_wrapper">
    <h2>{{ section.settings.Workout_heading }}</h2>
    <div class="grid blog_playlist_main ambassadors_bottom_main-blog related_blog_slider">

     {% comment %} paginate blogs['insight'].articles by 1000 {% endcomment %}
      {% for article in blogs['playlist'].articles %}

        {% if article.tags contains 'Listen'%}
          <div class="grid__item one-quarter article article-playlist">
            <div class="blog_image">
              <a href="{{ article.url }}" title="{{ article.title | escape }}"> 
                {% if article.image %}
                  <img data-src="{{ article.image | img_url: '600x400' , crop: "center"  }}" alt="{{ article.title | escape }}" class="lazyload" />
                {% else %}
                  {% if article.content contains "<img " %}
                      {% assign src = article.content | split: 'src="' %}
                      {% assign src = src[1] | split: '"' | first | replace: '//cdn', 'http://cdn' | replace: 'http:http://', 'http://' | remove: 'https:' %}
                      <img data-src="{{ src }}" alt="{{ article.title | escape }}" class="lazyload" />
                  {% endif %}    
                {% endif %}
              </a>
            </div>
            <div class="blog_details">
              <a href="{{ article.url }}"><h4 class='featured-blog__title'>{{ article.title }}</h4></a>
              <span class="excerpt" data-href="{{ article.url }}">
                	{{ article.excerpt_or_content | strip_html | truncate: 180 }}
              </span>
               <div class="tags_blog">

                   <ul class="inline-list">
                 {% for i in (1..10) %}

                    {% capture blog_filter %}Blog_filter_text_{{ i }}{% endcapture %}  
                    {% capture blog_filter_img %}Blog_filter_img_{{ i }}{% endcapture %}
                    {% assign filter_tag = settings[blog_filter] | capitalize %}


                      {% for tag in article.tags %}

                        {% if tag == filter_tag %} 
                          <li>
                            <img data-src="{{ settings[blog_filter_img] | img_url: '600x' }}" class="lazyload" />
                            <span>{{ settings[blog_filter] }}</span>
                          </li>
                        {% endif %}         
                      {% endfor %}
                  {% endfor %}
                  </ul>
                </div>

              {% if section.settings.enable_blog_author %}
                <p class="author">{{ 'blogs.article.author_by_html' | t: author : article.author }}</p>
              {% endif %}

            </div>
          </div>
        {% endif %}
      {% endfor %}

     {% comment %} endpaginate {% endcomment %}
    </div>
  </div>
</div>

<style>
  #shopify-section-{{section.id}} {
    background: {{ section.settings.faq_page_background }} 
  }
  
</style>

{% schema %}
  {
    "name": "Blog",
    "settings": [
      {
        "type": "checkbox",
        "id": "enable_blog_author",
        "default": false,
        "label": "Show author"
      },
	{
		"type": "text",
		"id": "authors_title",
		"label": "Author's Page Title",
		"default": "Author"
	},
    {
      "type":"header",
      "content":"Blog Content"
    },
    {
      "type": "image_picker",
      "id": "Blog_right_image",
      "label": "Blog Banner right Side Image"
    },
    {
      "type": "text",
      "id": "Blog_heading",
      "label": "Blog Heading"
    },
    {
      "type": "textarea",
      "id": "Blog_para",
      "label": "Blog Paragraph ( UK )"
    },
	 {
      "type": "textarea",
      "id": "Blog_para_non_uk",
      "label": "Blog Paragraph ( Non Uk )"
    },
    {
      "type": "text",
      "id": "Blog_Offer",
      "label": "Blog Offer Text"
    },
	{
      "type": "textarea",
      "id": "Blog_subscription",
      "label": "Blog Subscribe text"
    },
    {
      "type":"header",
      "content":"Workout Playlist"
    },
    {
      "type": "text",
      "id": "Workout_heading",
      "label": "Workout Heading"
    },
    {
      "type":"header",
      "content":"FAQs"
    },     
    {
      "type": "text",
      "id": "faq_title",
      "label": "FAQ header - title"
    },
    {
      "type": "richtext",
      "id": "faq_subtitle",
      "label": "FAQ header - subtitle text"
    },
    {
  	  "type": "color",
  	  "id" : "faq_page_background",
 	  "label" : "FAQ page - background color", 
 	  "default" : "#f6f6f6" 	
 	}

    ],
	"blocks": [
      {
        "type": "Text",
        "name": "Author's Page Block",
        "settings": [
			{
			  "type": "text",
			  "id": "authors_name",
		      "label": "Author's Name"
			},
			{
			  "type": "image_picker",
			  "id": "author_image",
			  "label": "Author's Image"
			},
			{
			  "type": "richtext",
			  "id": "author_description",
			  "label": "Author's Description"
			}
		]
	  }
	]
  }
{% endschema %}

{{ 'slick.css' | asset_url | stylesheet_tag }}
{{ 'slick-theme.css' | asset_url | stylesheet_tag }}
 <script type="text/javascript">
 /*masonry*/
   function setMasonryCB(){
     var masonry_wrapper = $('#masonry-grid-cb');
     
     {% comment %}
     //make the article like cover and full width 100% of the viewport
     var item_offset = (document.body.clientWidth - masonry_wrapper.width())/2;
     $('.ArticleItem.article_layout_1, .ArticleItem.article_layout_cover').css({
        'width': document.body.clientWidth, //body width minus scrollbar width
        'min-width': document.body.clientWidth,
        'margin-left':(-item_offset),
        'margin-right':(-item_offset)
     });
     $('.ArticleItem.article_layout_1 .blog_details, .ArticleItem.article_layout_cover .blog_details').css({
        'padding-left':item_offset,
        //'padding-right':item_offset,
     });
     {% endcomment %}
     
     
     //resize MasonryWrapper height ot its content (it has to be fixed val)
     var masonry_buffer = 100;
     var masonry_height = 0;
     var last_item_height = 0;
     var masonry_col_num = 3;
     if(masonry_wrapper.find('.masonry-grid-cb-item-4').length > 0){
       masonry_col_num = 4;
     }
     
     masonry_wrapper.find('.masonry-grid-cb-item').each(function(index, masonry_item){
       masonry_height += jQuery(this).outerHeight();
       last_item_height = jQuery(this).outerHeight();
     });
     
     var masonry_equilizer = 0;
     if(masonry_wrapper.find('.masonry-grid-cb-item').length % masonry_col_num){
     	masonry_equilizer = masonry_col_num - (masonry_wrapper.find('.masonry-grid-cb-item').length % masonry_col_num); /*we need to add this Num of virtual items to equalize, when the count%num_cols != 0*/
        masonry_equilizer = masonry_equilizer * last_item_height;
     }
     masonry_wrapper.css('min-height', (((masonry_height+masonry_equilizer)/3)+masonry_buffer) );
   }
 $('#masonry-grid-cb').bind('DOMSubtreeModified', function(){
   setMasonryCB();
 });
 $(window).on('resize', function(){
   setMasonryCB();
 });
 /*masonry end*/
   
 $(document).ready(function() {
     setMasonryCB();

   
     $(".related_blog_slider").slick({
        dots: false,
        arrows: true,
        infinite: true,
        slidesToShow: 4,
        slidesToScroll: 4,
         responsive: [
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 3,
        slidesToScroll: 3,
        infinite: true,
        
      }
    },
    {
      breakpoint: 600,
      settings: {
        slidesToShow: 3,
        slidesToScroll: 3
      }
    },
    {
      breakpoint: 480,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 2
      }
    }
    // You can unslick at a given breakpoint now by adding:
    // settings: "unslick"
    // instead of a settings object
  ]
      });
   
    });
   
 </script>