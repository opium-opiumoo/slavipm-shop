<div class="search-wrapper" style="background: {{ section.settings.search-bar-background-color }}">
    <div class="search-header">
        <h2>{{ section.settings.search-bar-header-text }}</h2>
    </div>
    <div class="search-bar">
        <input type="text" id="search-field" name="search" placeholder="Find anything (e.g. Return, Sizing)">
        <button type="submit" id="search-button" style="background: url({{ section.settings.search-bar-img-url | img_url: "2x" }})"></button>
        <div class="search-results"></div>
    </div>
    <div class="search-detail">
        <!-- this is inactive, only for the detail -->
        {% include 'image-detail' %}
    </div>

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script type="module">
      import {html, render} from 'https://unpkg.com/lit-html?module';
     

      function sortDivs() {
        var numericallyOrderedDivs =  $('.item-total').sort(function (a, b) {
          return $(a).find("p.priority-num").text() - $(b).find("p.priority-num").text();
        });

        const sortedItems = [];

        for (let i = 0; i < numericallyOrderedDivs.length; i++) {
          sortedItems.push(numericallyOrderedDivs[i])
        }


        const template = html `
        ${sortedItems}
        `

        return render(template, document.querySelector('.search-container-result'))
      }

      const plusFunc = {
        handleEvent(e) {
          e.target.parentNode.querySelector('.priority-num').textContent = Number(e.target.parentNode.querySelector('.priority-num').textContent) + 1
          sortDivs()
        }
      }

      const minusFunc = {
        handleEvent(e) {
          if (e.target.parentNode.querySelector('.priority-num').textContent > 1) {
          e.target.parentNode.querySelector('.priority-num').textContent = Number(e.target.parentNode.querySelector('.priority-num').textContent) - 1
          sortDivs()
          }
        }
      }

      const delFunc = {
        handleEvent(e) {
          e.target.parentNode.parentNode.parentNode.remove()
          if (document.querySelector('.search-container-result').children.length == 0) {
            $('.search-container-result').append(`<p class='search-empty'>No items matching you criteria.</p>`)
          }
        },
        capture: true,
      }

      function removeTags(str) {
      if ((str===null) || (str===''))
          return false;
      else
          str = str.toString();
      return str.replace( /(<([^>]+)>)/ig, '');
      }
      
      async function dataLoad () {
        const response = await fetch('https://www.wearpepper.com/products.json');
        const data = await response.json()
        const products = data.products
        return products;
      }
      
      const products = await dataLoad();
      
      let products_items = [];
      for (let i = 0; i < products.length; i++) {
      	products_items.push(products[i])
      }
      
      console.log(products_items)

      $('#search-field').on('keyup', async function (event) {
        event.preventDefault();
        const searchInput = document.getElementById('search-field').value
        const products = products_items
        console.log(products)

        const sortedList = [];
        const includeList = [];

        for (let i = 0; i < products.length; i++) {
          const searchPattern = new RegExp('^' + searchInput + '\s*', 'i');
          if (searchPattern.test(products[i].title)) {
            sortedList.push(products[i])
          }
        }

        for (let i = 0; i < products.length; i++) {
          if (products[i].title.toLowerCase().includes(event.target.value.toLowerCase()) && !sortedList.includes(products[i])) {
            includeList.push(products[i])
          }
        }

        sortedList.sort((a, b) => a.title.localeCompare(b.title))

        const fullList = sortedList.concat(includeList)

        const itemTemplate = []
        let priorityNum = 1;
        for (const item of fullList) {
          itemTemplate.push(html`
          <div class='item-total'>
            <div class="item-container">
              <div class="item-img">
                <img src=${item.images[0].src + '+200x'}>
              </div>
              <div class='item-after-img'>
                <div class="item-full">
                  <div class="item-title-price">
                  <p>${item.title} $${item.variants[0].price}</p>
                  </div>
                  <div class='item-description'>
                    ${removeTags(item.body_html)}
                  </div>
                </div>
                <div class="functions">
                  <div class='priority'>
                    <p>Search Priority:</p>
                    <button id='minusBtn' @click=${minusFunc}>-</button>
                    <p class='priority-num'>${priorityNum}</p>
                    <button id='plusBtn' @click=${plusFunc}>+</button>
                    </div>
                  <button id='delBtn' @click=${delFunc}>Exclude from Search</button>
                </div>
              </div>
            </div>
            <hr>
          </div>
          `)
          priorityNum += 1;
        }
        
        console.log(itemTemplate)

        function checkItems() {
          if (itemTemplate.length != 0) {
            return html `${itemTemplate}`
          } else {
            return html `<p class='search-empty'>No items matching you criteria.</p>`
          }
        }

        const myTemplate = html `
        <div class='search-container'>
          <div class='search-h2'>
            <h2>Search Results</h2>
          </div>
          <div class='search-container-result'>
          ${checkItems()}
          </div>
        </div>
        `

        render(myTemplate, document.querySelector('.search-results'))
        if (document.getElementById('search-field').value == '') {
          document.querySelector('.search-results').style.display = 'none';
        } else {
          document.querySelector('.search-results').style.display = 'block';
        }

      })
    </script>
</div>

{% schema %}
  {
    "name": "Search Bar Section",
    "settings": [
			{
			"id": "search-bar-background-color",
			"type": "color",
			"label": "Background Color"
			},
			{
			"id":"search-bar-header-text",
			"type":"text",
			"label":"Header"
			},
			{
			"id": "search-bar-img-url",
			"type":"image_picker",
			"label": "Search Bar Image"
			}
		
],
	"presets": [
      {
        "category": "Products",
        "name": "Search Bar Section",
        "settings": {
	
        }
      }
    ]
  }
{% endschema %}